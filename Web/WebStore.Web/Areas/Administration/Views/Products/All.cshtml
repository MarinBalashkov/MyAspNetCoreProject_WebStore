@using WebStore.Web.ViewModels.Products
@model WebStore.Web.ViewModels.Administration.Products.ProductsAllViewModel
@{
    this.ViewData["Title"] = "All products";
}

<h1>@this.ViewData["Title"]</h1>

<section class="product-filter-section">
    <div class="container">
        <div class="row">
            @foreach (var product in Model.Products)
            {
                <div class="col-lg-3 col-sm-6">
                    <div class="product-item">
                        <div class="pi-pic">
                            <img src="@product.MainImages.ImageUrl" alt="">
                            <div class="pi-links">
                                <a asp-area="" asp-controller="Products" asp-action="Details" asp-route-id="@product.Id" class="add-card"><i class="flaticon-bag"></i><span>ADD TO CART</span></a>
                                <a asp-area="" asp-controller="Favorites" asp-action="Add" asp-route-productId="@product.Id" class="wishlist-btn"><i class="flaticon-heart"></i></a>
                            </div>
                        </div>
                        <div class="pi-text">
                            <h6>@product.Price</h6>
                            <p>@product.Name </p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<!-- Pagenation -->
<nav>
    <ul class="pagination justify-content-center">
        @if (this.Model.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link"
                   asp-area="Administration"
                   asp-controller="Products"
                   asp-action="All"
                   asp-route-page="@(this.Model.CurrentPage - 1)">Previous</a>
            </li>
        }

        @{
            const int MorePagesToShow = 3;
            var pagesToShow = new List<int>();
            for (var i = 1; i <= MorePagesToShow; i++)
            {
                pagesToShow.Add(i);
            }

            for (var i = this.Model.CurrentPage - MorePagesToShow; i <= this.Model.CurrentPage + MorePagesToShow; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            for (var i = this.Model.PagesCount - MorePagesToShow + 1; i <= this.Model.PagesCount; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }

            pagesToShow = pagesToShow.Where(x => x <= this.Model.PagesCount).Distinct().OrderBy(x => x).ToList();
        }
        @for (var i = 0; i < pagesToShow.Count; i++)
        {
            var className = string.Empty;
            var pageNumber = pagesToShow[i];
            if (pageNumber == this.Model.CurrentPage)
            {
                className = "active";
            }
            if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
            {
                <li class="page-item @className">
                    <a class="page-link"
                       asp-area="Administration"
                       asp-controller="Products"
                       asp-action="All"
                       asp-route-page="@pageNumber">...</a>
                </li>
            }
            <li class="page-item @className">
                <a class="page-link"
                   asp-area="Administration"
                   asp-controller="Products"
                   asp-action="All"
                   asp-route-page="@pageNumber">@pageNumber</a>
            </li>
        }
        @if (this.Model.CurrentPage == this.Model.PagesCount)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Next</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link"
                   asp-area="Administration"
                   asp-controller="Products"
                   asp-action="All"
                   asp-route-page="@(this.Model.CurrentPage + 1)">Next</a>
            </li>
        }
    </ul>
</nav>
<!-- Pagenation  End-->